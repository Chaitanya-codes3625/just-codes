#include <stdio.h>

struct Process {
    int id, arrival, burst, priority, waiting, turnaround, completion;
};

void priorityScheduling(struct Process p[], int n) {
    for (int i = 0; i < n - 1; i++)  
        for (int j = i + 1; j < n; j++)  
            if (p[i].priority > p[j].priority || 
               (p[i].priority == p[j].priority && p[i].arrival > p[j].arrival)) {
                struct Process temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }

    int time = 0;
    float totalWT = 0, totalTAT = 0;

    printf("\nID  AT  BT  PR  CT  TAT  WT\n");

    for (int i = 0; i < n; i++) {
        time = (time < p[i].arrival) ? p[i].arrival : time;
        p[i].completion = time += p[i].burst;
        p[i].turnaround = p[i].completion - p[i].arrival;
        p[i].waiting = p[i].turnaround - p[i].burst;

        totalWT += p[i].waiting;
        totalTAT += p[i].turnaround;

        printf("%2d   %2d  %2d  %2d  %2d  %2d   %2d\n", 
               p[i].id, p[i].arrival, p[i].burst, p[i].priority,
               p[i].completion, p[i].turnaround, p[i].waiting);
    }

    printf("\nAverage Waiting Time: %.2f", totalWT / n);
    printf("\nAverage Turnaround Time: %.2f\n", totalTAT / n);
}

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    struct Process p[n];

    printf("Enter Arrival Time, Burst Time, and Priority for each process (AT BT PR):\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d %d", &p[i].arrival, &p[i].burst, &p[i].priority);
        p[i].id = i + 1;
    }

    priorityScheduling(p, n);
    return 0;
}
